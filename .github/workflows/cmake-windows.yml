name: Build Windows App

on:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "production" ]

jobs:
  build-windows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ls
          bash bootstrap-vcpkg.sh

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            ninja-build \
            g++-mingw-w64-x86-64 \
            nsis \
            mingw-w64-tools \
            libfmt-mingw-w64-dev \
            qt6-base-dev-mingw-w64 \
            qt6-tools-dev-mingw-w64

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.0'
          modules: 'qt5compat qtmultimedia qtnetworkauth qtpositioning qtcharts qtvirtualkeyboard qtwebchannel qtwebsockets qtwebview'

      - name: Configure CMake
        run: |
          cmake -S . -B build -G "Ninja" -DCMAKE_TOOLCHAIN_FILE=toolchain-windows.cmake

      - name: Build
        run: cmake --build build

      - name: Create deployment package
        run: |
          mkdir dist
          x86_64-w64-mingw32-windeployqt --dir dist build/my_program.exe
          cp build/my_program.exe dist/
          cp /usr/x86_64-w64-mingw32/bin/libfmt*.dll dist/

      - name: Build installer with NSIS
        run: makensis installer.nsi

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: DecisionMaker_Installer.exe
