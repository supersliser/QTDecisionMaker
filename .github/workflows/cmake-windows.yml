name: Build Windows App

on:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "production" ]

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat

      - name: Install build dependencies
        run: |
          vcpkg install
          choco install nsis

      - name: Configure CMake
        run: |
          cmake -S . -B build -G "Ninja" -DCMAKE_TOOLCHAIN_FILE=toolchain-windows.cmake

      - name: Build
        run: cmake --build build

      - name: Create deployment package
        run: |
          mkdir dist
          x86_64-w64-mingw32-windeployqt --dir dist build/DecisionMaker.exe
          cp build/DecisionMaker.exe dist/
          cp /usr/x86_64-w64-mingw32/bin/libfmt*.dll dist/

      - name: Create deployment package
        run: |
          # Add Qt's bin directory to the PATH so we can find windeployqt.exe
          $env:PATH = "$env:VCPKG_ROOT/installed/x64-windows/tools/qt6/bin;$env:PATH"
          
          # Create the staging directory
          mkdir dist

          # Run Qt's deployment tool
          windeployqt --dir dist build/DecisionMaker.exe

          # Copy our own executable and the fmt DLL from the vcpkg install tree
          cp build/DecisionMaker.exe dist/
          cp $env:VCPKG_ROOT/installed/x64-windows/bin/fmt*.dll dist/
      
      - name: Build installer with NSIS
        run: makensis installer.nsi

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: DecisionMaker_Installer.exe
